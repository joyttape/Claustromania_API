// <auto-generated />
using System;
using Claustromania.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Claustromania.Migrations
{
    [DbContext(typeof(ClaustromaniaDbContext))]
    partial class ClaustromaniaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Claustromania.Models.Caixa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("DataHoraAbertura")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_hora_abertura");

                    b.Property<DateTime?>("DataHoraFechamento")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_hora_fechamento");

                    b.Property<string>("FuncionarioNome")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("funcionario_nome");

                    b.Property<string>("Observacoes")
                        .HasColumnType("longtext")
                        .HasColumnName("observacoes");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("status");

                    b.Property<decimal?>("TotalTransacoes")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("total_transacoes");

                    b.Property<decimal?>("ValorFinal")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("valor_final");

                    b.Property<decimal>("ValorInicial")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("valor_inicial");

                    b.HasKey("Id")
                        .HasName("pk_caixa");

                    b.ToTable("caixa", (string)null);
                });

            modelBuilder.Entity("Claustromania.Models.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("Id");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Bairro");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("CEP");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Cidade");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Complemento");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Estado");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Logradouro");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Numero");

                    b.HasKey("Id")
                        .HasName("pk_endereco");

                    b.ToTable("endereco", (string)null);
                });

            modelBuilder.Entity("Claustromania.Models.Funcionario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("Id");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Cargo");

                    b.Property<double>("Salario")
                        .HasColumnType("double")
                        .HasColumnName("Salario");

                    b.Property<string>("Turno")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Turno");

                    b.Property<string>("data_contratacao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Data_Contratacao");

                    b.HasKey("Id")
                        .HasName("pk_funcionario");

                    b.ToTable("funcionario", (string)null);
                });

            modelBuilder.Entity("Claustromania.Models.Jogo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descricao");

                    b.Property<string>("Dificuldade")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("dificuldade");

                    b.Property<string>("Duracao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("duracao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nome");

                    b.Property<double>("Preco")
                        .HasColumnType("double")
                        .HasColumnName("preco");

                    b.HasKey("Id")
                        .HasName("pk_jogo");

                    b.ToTable("jogo", (string)null);
                });

            modelBuilder.Entity("Claustromania.Models.Pessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("Id");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("CPF");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("date")
                        .HasColumnName("Data_Nascimento");

                    b.Property<string>("Email")
                        .HasColumnType("longtext")
                        .HasColumnName("Email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Nome");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Sexo");

                    b.HasKey("Id")
                        .HasName("pk_pessoa");

                    b.ToTable("pessoa", (string)null);
                });

            modelBuilder.Entity("Claustromania.Models.Sala", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("Id");

                    b.Property<int>("Jogadores_num")
                        .HasColumnType("int")
                        .HasColumnName("Capac_Jogadores");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Numero");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Status_Sala");

                    b.HasKey("Id")
                        .HasName("pk_sala");

                    b.ToTable("sala", (string)null);
                });

            modelBuilder.Entity("Claustromania.Models.Transacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("Id");

                    b.Property<DateTime>("DataDaTransacao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("Data_da_Transacao");

                    b.Property<Guid>("FkCaixaId")
                        .HasColumnType("char(36)")
                        .HasColumnName("fk_Caixa_Id");

                    b.Property<int>("FkPessoaId")
                        .HasColumnType("int")
                        .HasColumnName("fk_Pessoa_Id");

                    b.Property<string>("FormaDePagamento")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Forma_de_Pagamento");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("Valor");

                    b.HasKey("Id")
                        .HasName("pk_transacao");

                    b.ToTable("transacao", (string)null);
                });

            modelBuilder.Entity("Claustromania.Models.Unidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<int>("Capacidade")
                        .HasColumnType("int")
                        .HasColumnName("Capacidade");

                    b.Property<string>("Horario_Func")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Horario_Func");

                    b.Property<string>("NomeUnidade")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("NomeUnidade");

                    b.Property<bool>("Status_uni")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Status_uni");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Telefone");

                    b.HasKey("Id")
                        .HasName("pk_unidade");

                    b.ToTable("unidade", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
