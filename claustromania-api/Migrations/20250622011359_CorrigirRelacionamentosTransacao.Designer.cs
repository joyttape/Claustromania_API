// <auto-generated />
using System;
using Claustromania.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Claustromania.Migrations
{
    [DbContext(typeof(ClaustromaniaDbContext))]
    [Migration("20250622011359_CorrigirRelacionamentosTransacao")]
    partial class CorrigirRelacionamentosTransacao
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Claustromania.Models.Caixa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("DataHoraAbertura")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_hora_abertura");

                    b.Property<DateTime?>("DataHoraFechamento")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_hora_fechamento");

                    b.Property<Guid>("FkFuncionario")
                        .HasColumnType("char(36)")
                        .HasColumnName("fk_funcionario");

                    b.Property<Guid>("FkUnidade")
                        .HasColumnType("char(36)")
                        .HasColumnName("fk_unidade");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nome");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("observacoes");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("status");

                    b.Property<int>("TotalTransacoes")
                        .HasColumnType("int")
                        .HasColumnName("total_transacoes");

                    b.Property<decimal?>("ValorFinal")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("valor_final");

                    b.Property<decimal>("ValorInicial")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("valor_inicial");

                    b.HasKey("Id")
                        .HasName("pk_caixa");

                    b.ToTable("caixa", (string)null);
                });

            modelBuilder.Entity("Claustromania.Models.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<Guid>("FkPessoa")
                        .HasColumnType("char(36)")
                        .HasColumnName("fk_pessoa");

                    b.Property<string>("NivelExperiencia")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nivel_experiencia");

                    b.HasKey("Id")
                        .HasName("pk_cliente");

                    b.ToTable("cliente", (string)null);
                });

            modelBuilder.Entity("Claustromania.Models.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("bairro");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("cep");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cidade");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("complemento");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("estado");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("logradouro");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("numero");

                    b.HasKey("Id")
                        .HasName("pk_endereco");

                    b.ToTable("endereco", (string)null);
                });

            modelBuilder.Entity("Claustromania.Models.Funcionario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cargo");

                    b.Property<DateTime?>("DataContratacao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_contratacao");

                    b.Property<Guid>("FkPessoa")
                        .HasColumnType("char(36)")
                        .HasColumnName("fk_pessoa");

                    b.Property<decimal?>("Salario")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("salario");

                    b.Property<string>("Turno")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("turno");

                    b.HasKey("Id")
                        .HasName("pk_funcionario");

                    b.ToTable("funcionario", (string)null);
                });

            modelBuilder.Entity("Claustromania.Models.Gerente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<Guid>("FkFuncionario")
                        .HasColumnType("char(36)")
                        .HasColumnName("fk_funcionario");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nome");

                    b.HasKey("Id")
                        .HasName("pk_gerente");

                    b.ToTable("gerente", (string)null);
                });

            modelBuilder.Entity("Claustromania.Models.Jogo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descricao");

                    b.Property<string>("Dificuldade")
                        .HasColumnType("longtext")
                        .HasColumnName("dificuldade");

                    b.Property<string>("Duracao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("duracao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nome");

                    b.Property<decimal?>("Preco")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("preco");

                    b.HasKey("Id")
                        .HasName("pk_jogo");

                    b.ToTable("jogo", (string)null);
                });

            modelBuilder.Entity("Claustromania.Models.Pessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("Id");

                    b.Property<string>("CPF")
                        .HasColumnType("longtext")
                        .HasColumnName("CPF");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("date")
                        .HasColumnName("Data_Nascimento");

                    b.Property<string>("Email")
                        .HasColumnType("longtext")
                        .HasColumnName("Email");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext")
                        .HasColumnName("Nome");

                    b.Property<string>("Sexo")
                        .HasColumnType("longtext")
                        .HasColumnName("Sexo");

                    b.HasKey("Id")
                        .HasName("pk_pessoa");

                    b.ToTable("pessoa", (string)null);
                });

            modelBuilder.Entity("Claustromania.Models.Reserva", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("DataReserva")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_reserva");

                    b.Property<Guid>("FkCliente")
                        .HasColumnType("char(36)")
                        .HasColumnName("fk_cliente");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("valor_total");

                    b.HasKey("Id")
                        .HasName("pk_reserva");

                    b.ToTable("reserva", (string)null);
                });

            modelBuilder.Entity("Claustromania.Models.Sala", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<bool>("Ativa")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("ativa");

                    b.Property<int?>("Capacidade")
                        .HasColumnType("int")
                        .HasColumnName("capacidade");

                    b.Property<Guid?>("FkUnidade")
                        .HasColumnType("char(36)")
                        .HasColumnName("fk_unidade");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nome");

                    b.HasKey("Id")
                        .HasName("pk_sala");

                    b.ToTable("sala", (string)null);
                });

            modelBuilder.Entity("Claustromania.Models.SalaJogo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<Guid>("FkJogo")
                        .HasColumnType("char(36)")
                        .HasColumnName("fk_jogo");

                    b.Property<Guid>("FkSala")
                        .HasColumnType("char(36)")
                        .HasColumnName("fk_sala");

                    b.HasKey("Id")
                        .HasName("pk_sala_jogo");

                    b.ToTable("sala_jogo", (string)null);
                });

            modelBuilder.Entity("Claustromania.Models.Transacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("DataTransacao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_transacao");

                    b.Property<Guid>("FkCaixa")
                        .HasColumnType("char(36)")
                        .HasColumnName("fk_caixa");

                    b.Property<Guid?>("FkPessoa")
                        .HasColumnType("char(36)")
                        .HasColumnName("fk_pessoa");

                    b.Property<string>("FormaPagamento")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("forma_pagamento");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("valor");

                    b.HasKey("Id")
                        .HasName("pk_transacao");

                    b.HasIndex("FkCaixa")
                        .HasDatabaseName("ix_transacao_fk_caixa");

                    b.HasIndex("FkPessoa")
                        .HasDatabaseName("ix_transacao_fk_pessoa");

                    b.ToTable("transacao", (string)null);
                });

            modelBuilder.Entity("Claustromania.Models.Unidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<bool>("Ativa")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("ativa");

                    b.Property<int?>("Capacidade")
                        .HasColumnType("int")
                        .HasColumnName("capacidade");

                    b.Property<Guid?>("FkEndereco")
                        .HasColumnType("char(36)")
                        .HasColumnName("fk_endereco");

                    b.Property<Guid?>("FkGerente")
                        .HasColumnType("char(36)")
                        .HasColumnName("fk_gerente");

                    b.Property<TimeSpan?>("HorarioAbertura")
                        .HasColumnType("time(6)")
                        .HasColumnName("horario_abertura");

                    b.Property<TimeSpan?>("HorarioFechamento")
                        .HasColumnType("time(6)")
                        .HasColumnName("horario_fechamento");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nome");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("telefone");

                    b.HasKey("Id")
                        .HasName("pk_unidade");

                    b.ToTable("unidade", (string)null);
                });

            modelBuilder.Entity("Claustromania.Models.Transacao", b =>
                {
                    b.HasOne("Claustromania.Models.Caixa", null)
                        .WithMany()
                        .HasForeignKey("FkCaixa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_transacao_caixa_fk_caixa");

                    b.HasOne("Claustromania.Models.Pessoa", null)
                        .WithMany()
                        .HasForeignKey("FkPessoa")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_transacao_pessoa_fk_pessoa");
                });
#pragma warning restore 612, 618
        }
    }
}
